{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nconst useFetch = url => {\n  _s();\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    //changing the state inside side effect could be a bad idea because you could create an infinite loop\n    const abortContr = new AbortController();\n    setTimeout(() => {\n      fetch(url, {\n        signal: abortContr.signal\n      }) // start server command, cd into blog then npx json-server --watch data/database.json --port 8000\n      .then(res => {\n        //.then necessary because async is not possible inside useEffect, maybe with reference to external function\n        console.log(res);\n        if (!res.ok) {\n          throw Error(\"Could not fetch the data for that resource\");\n        }\n        return res.json();\n      }).then(data => {\n        setData(data);\n        setIsPending(false);\n        setError(null);\n      }).catch(err => {\n        if (err.name === \"AbortError\") {\n          console.log(\"fetch aborted\");\n        } else {\n          setIsPending(false);\n          setError(err.message);\n        }\n      });\n    }, 300);\n    return () => abortContr.abort();\n\n    //dependency array: will only be run when certain conditions are met and not always at every re-render\n  }, [url]); //watches after variable in [] brackets, once it changes it will run the function useEffect\n\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n_s(useFetch, \"VxPkICXS4AfkXU1R8tuEJAA8e58=\");\nexport default useFetch;","map":{"version":3,"names":["useEffect","useState","useFetch","url","data","setData","isPending","setIsPending","error","setError","abortContr","AbortController","setTimeout","fetch","signal","then","res","console","log","ok","Error","json","catch","err","name","message","abort"],"sources":["/home/t/DriveToby/xPro/blog/src/useFetch.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst useFetch = (url) => {\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    //changing the state inside side effect could be a bad idea because you could create an infinite loop\n    const abortContr = new AbortController();\n\n    setTimeout(() => {\n      fetch(url, { signal: abortContr.signal }) // start server command, cd into blog then npx json-server --watch data/database.json --port 8000\n        .then((res) => {\n          //.then necessary because async is not possible inside useEffect, maybe with reference to external function\n          console.log(res);\n          if (!res.ok) {\n            throw Error(\"Could not fetch the data for that resource\");\n          }\n          return res.json();\n        })\n        .then((data) => {\n          setData(data);\n          setIsPending(false);\n          setError(null);\n        })\n        .catch((err) => {\n          if (err.name === \"AbortError\") {\n            console.log(\"fetch aborted\");\n          } else {\n            setIsPending(false);\n            setError(err.message);\n          }\n        });\n    }, 300);\n\n    return () => abortContr.abort();\n\n    //dependency array: will only be run when certain conditions are met and not always at every re-render\n  }, [url]); //watches after variable in [] brackets, once it changes it will run the function useEffect\n\n  return {\n    data,\n    isPending,\n    error,\n  };\n};\n\nexport default useFetch;\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,UAAU,GAAG,IAAIC,eAAe,EAAE;IAExCC,UAAU,CAAC,MAAM;MACfC,KAAK,CAACV,GAAG,EAAE;QAAEW,MAAM,EAAEJ,UAAU,CAACI;MAAO,CAAC,CAAC,CAAC;MAAA,CACvCC,IAAI,CAAEC,GAAG,IAAK;QACb;QACAC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAChB,IAAI,CAACA,GAAG,CAACG,EAAE,EAAE;UACX,MAAMC,KAAK,CAAC,4CAA4C,CAAC;QAC3D;QACA,OAAOJ,GAAG,CAACK,IAAI,EAAE;MACnB,CAAC,CAAC,CACDN,IAAI,CAAEX,IAAI,IAAK;QACdC,OAAO,CAACD,IAAI,CAAC;QACbG,YAAY,CAAC,KAAK,CAAC;QACnBE,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,CAAC,CACDa,KAAK,CAAEC,GAAG,IAAK;QACd,IAAIA,GAAG,CAACC,IAAI,KAAK,YAAY,EAAE;UAC7BP,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;QAC9B,CAAC,MAAM;UACLX,YAAY,CAAC,KAAK,CAAC;UACnBE,QAAQ,CAACc,GAAG,CAACE,OAAO,CAAC;QACvB;MACF,CAAC,CAAC;IACN,CAAC,EAAE,GAAG,CAAC;IAEP,OAAO,MAAMf,UAAU,CAACgB,KAAK,EAAE;;IAE/B;EACF,CAAC,EAAE,CAACvB,GAAG,CAAC,CAAC,CAAC,CAAC;;EAEX,OAAO;IACLC,IAAI;IACJE,SAAS;IACTE;EACF,CAAC;AACH,CAAC;AAAC,GA5CIN,QAAQ;AA8Cd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}