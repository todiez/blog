{"ast":null,"code":"import _slicedToArray from\"/home/t/DriveToby/xPro/blog/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from\"react\";var useFetch=function useFetch(url){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isPending=_useState4[0],setIsPending=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];useEffect(function(){//changing the state inside side effect could be a bad idea because you could create an infinite loop\nvar abortContr=new AbortController();setTimeout(function(){fetch(url,{signal:abortContr.signal})// start server command, cd into blog then npx json-server --watch data/database.json --port 8000\n.then(function(res){//.then necessary because async is not possible inside useEffect, maybe with reference to external function\nconsole.log(res);if(!res.ok){throw Error(\"Could not fetch the data for that resource\");}return res.json();}).then(function(data){setData(data);setIsPending(false);setError(null);}).catch(function(err){if(err.name===\"AbortError\"){console.log(\"fetch aborted\");}else{setIsPending(false);setError(err.message);}});},300);return function(){return abortContr.abort();};//dependency array: will only be run when certain conditions are met and not always at every re-render\n},[url]);//watches after variable in [] brackets, once it changes it will run the function useEffect\nreturn{data:data,isPending:isPending,error:error};};export default useFetch;","map":{"version":3,"names":["useEffect","useState","useFetch","url","data","setData","isPending","setIsPending","error","setError","abortContr","AbortController","setTimeout","fetch","signal","then","res","console","log","ok","Error","json","catch","err","name","message","abort"],"sources":["/home/t/DriveToby/xPro/blog/src/useFetch.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst useFetch = (url) => {\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    //changing the state inside side effect could be a bad idea because you could create an infinite loop\n    const abortContr = new AbortController();\n\n    setTimeout(() => {\n      fetch(url, { signal: abortContr.signal }) // start server command, cd into blog then npx json-server --watch data/database.json --port 8000\n        .then((res) => {\n          //.then necessary because async is not possible inside useEffect, maybe with reference to external function\n          console.log(res);\n          if (!res.ok) {\n            throw Error(\"Could not fetch the data for that resource\");\n          }\n          return res.json();\n        })\n        .then((data) => {\n          setData(data);\n          setIsPending(false);\n          setError(null);\n        })\n        .catch((err) => {\n          if (err.name === \"AbortError\") {\n            console.log(\"fetch aborted\");\n          } else {\n            setIsPending(false);\n            setError(err.message);\n          }\n        });\n    }, 300);\n\n    return () => abortContr.abort();\n\n    //dependency array: will only be run when certain conditions are met and not always at every re-render\n  }, [url]); //watches after variable in [] brackets, once it changes it will run the function useEffect\n\n  return {\n    data,\n    isPending,\n    error,\n  };\n};\n\nexport default useFetch;\n"],"mappings":"iHAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAE3C,GAAMC,SAAQ,CAAG,QAAXA,SAAQ,CAAIC,GAAG,CAAK,CACxB,cAAwBF,QAAQ,CAAC,IAAI,CAAC,wCAA/BG,IAAI,eAAEC,OAAO,eACpB,eAAkCJ,QAAQ,CAAC,IAAI,CAAC,yCAAzCK,SAAS,eAAEC,YAAY,eAC9B,eAA0BN,QAAQ,CAAC,IAAI,CAAC,yCAAjCO,KAAK,eAAEC,QAAQ,eAEtBT,SAAS,CAAC,UAAM,CACd;AACA,GAAMU,WAAU,CAAG,GAAIC,gBAAe,EAAE,CAExCC,UAAU,CAAC,UAAM,CACfC,KAAK,CAACV,GAAG,CAAE,CAAEW,MAAM,CAAEJ,UAAU,CAACI,MAAO,CAAC,CAAE;AAAA,CACvCC,IAAI,CAAC,SAACC,GAAG,CAAK,CACb;AACAC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAChB,GAAI,CAACA,GAAG,CAACG,EAAE,CAAE,CACX,KAAMC,MAAK,CAAC,4CAA4C,CAAC,CAC3D,CACA,MAAOJ,IAAG,CAACK,IAAI,EAAE,CACnB,CAAC,CAAC,CACDN,IAAI,CAAC,SAACX,IAAI,CAAK,CACdC,OAAO,CAACD,IAAI,CAAC,CACbG,YAAY,CAAC,KAAK,CAAC,CACnBE,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAC,CAAC,CACDa,KAAK,CAAC,SAACC,GAAG,CAAK,CACd,GAAIA,GAAG,CAACC,IAAI,GAAK,YAAY,CAAE,CAC7BP,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC,CAC9B,CAAC,IAAM,CACLX,YAAY,CAAC,KAAK,CAAC,CACnBE,QAAQ,CAACc,GAAG,CAACE,OAAO,CAAC,CACvB,CACF,CAAC,CAAC,CACN,CAAC,CAAE,GAAG,CAAC,CAEP,MAAO,kBAAMf,WAAU,CAACgB,KAAK,EAAE,GAE/B;AACF,CAAC,CAAE,CAACvB,GAAG,CAAC,CAAC,CAAE;AAEX,MAAO,CACLC,IAAI,CAAJA,IAAI,CACJE,SAAS,CAATA,SAAS,CACTE,KAAK,CAALA,KACF,CAAC,CACH,CAAC,CAED,cAAeN,SAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}